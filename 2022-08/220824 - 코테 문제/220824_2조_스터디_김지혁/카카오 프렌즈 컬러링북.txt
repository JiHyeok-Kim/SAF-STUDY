#include <vector>
#include <queue>

using namespace std;

struct Node{
    int y;
    int x;
};

int maxi;
vector<vector<int>> temp;
int cntPicture(int ty, int tx, int m, int n)
{
    queue<Node> q;
    int directY[4] = { -1,1,0,0 };
    int directX[4] = { 0,0,-1,1 };

    int cntPic = 1;
    int tar = temp[ty][tx];
    temp[ty][tx] = 0;
    q.push({ ty, tx });
    while (!q.empty())
    {
        Node now = q.front();
        q.pop();

        for (int i = 0; i < 4; i++)
         {
            int ny = now.y + directY[i];
            int nx = now.x + directX[i];
            if (ny < 0 || nx < 0 || ny >= m || nx >= n) continue;
            if (temp[ny][nx] != tar) continue;
            cntPic++;
            temp[ny][nx] = 0;
            q.push({ ny, nx });
        }
    }

    if (cntPic > maxi) maxi = cntPic;

    return 1;
}

// 전역 변수를 정의할 경우 함수 내에 초기화 코드를 꼭 작성해주세요.
vector<int> solution(int m, int n, vector<vector<int>> picture) {
    
    temp = picture;
    maxi = 0;
    vector<int> answer(2);
    
    int cnt = 0;
    
    for (int y = 0; y < m; y++)
    {
        for (int x = 0; x < n; x++)
        {
            if (temp[y][x] == 0) continue;
            cnt += cntPicture(y, x, m, n);
        }
    }
    
    answer[0] = cnt;
    answer[1] = maxi;
    
    return answer;
}