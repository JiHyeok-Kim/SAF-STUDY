#include <vector>

using namespace std;

int Arr[110][110] = { 0 };
int dy[4] = { -1,1,0,0 };
int dx[4] = { 0,0,1,-1 };
int dat[110][110] = { 0 };
int objCnt = 1;
int M = 0;
int N = 0;
int grpCnt = 0;


int Find(int y, int x) {
	for (int i = 0; i < 4; i++) {
		int ny = y + dy[i];
		int nx = x + dx[i];
		if (ny < 0 || nx < 0 || ny >= M || nx >= N)continue;
		if (dat[ny][nx] == 1) continue;
		if (Arr[ny][nx] == Arr[y][x]) {
			dat[ny][nx] = 1;
			objCnt++;
			Find(ny, nx);
		}
	}
	return objCnt;
}


// 전역 변수를 정의할 경우 함수 내에 초기화 코드를 꼭 작성해주세요.
vector<int> solution(int m, int n, vector<vector<int>> Arr2) {
	M = m;
	N = n;
	grpCnt = 0;
	objCnt = 1;
	for (int i = 0; i < 110; i++) {
		for (int j = 0; j < 110; j++) {
			dat[i][j] = 0;
		}
	}



	for (int i = 0; i < M; i++) {
		for (int j = 0; j < N; j++) {
			Arr[i][j] = Arr2[i][j];
		}
	}
	int Max = -2134567890;

	for (int i = 0; i < M; i++) {
		for (int j = 0; j < N; j++) {
			if (Arr[i][j] != 0 && dat[i][j] == 0) {
				dat[i][j] = 1;
				grpCnt++;
				objCnt = 1;
				int abc = Find(i, j);
				if (Max < abc) {
					Max = abc;
				}
			}
		}
	}



	vector<int> answer(2);
	answer[0] = grpCnt;
	answer[1] = Max;

	return answer;
}