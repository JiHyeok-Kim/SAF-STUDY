#include <vector>
#include <queue>
using namespace std;

struct book{
    int y;
    int x;
    int color;
};

int dy[4] = {-1,1,0,0};
int dx[4] = {0,0,-1,1};

int used[100][100];

// 전역 변수를 정의할 경우 함수 내에 초기화 코드를 꼭 작성해주세요.
vector<int> solution(int m, int n, vector<vector<int>> picture) {
    int number_of_area = 0;
    int max_size_of_one_area = 0;
    
    for(int i=0;i<m;i++){
        for(int j=0;j<n;j++){
            used[i][j] = 0;
        }
    }
    
    for(int i=0;i<m;i++){
        for(int j=0;j<n;j++){
            if(used[i][j] == 1) continue;
            if(picture[i][j] == 0) continue;
            
            queue<book> q;
            q.push({i, j, picture[i][j]});
            used[i][j] = 1;

            int result = 0;

            while(!q.empty()){
                book now = q.front();
                q.pop();

                result++;

                for(int i=0;i<4;i++){
                    int ny = now.y + dy[i];
                    int nx = now.x + dx[i];
                    if(ny<0||nx<0||ny>=m || nx>=n) continue;
                    if(picture[ny][nx] != picture[now.y][now.x]) continue;
                    if(used[ny][nx] == 1) continue;
                    used[ny][nx] = 1;
                    q.push({ny, nx, now.color});
                }
            }
            number_of_area++;
            if(result > max_size_of_one_area) max_size_of_one_area = result;
        }
    }
    
    vector<int> answer(2);
    answer[0] = number_of_area;
    answer[1] = max_size_of_one_area;
    return answer;
}