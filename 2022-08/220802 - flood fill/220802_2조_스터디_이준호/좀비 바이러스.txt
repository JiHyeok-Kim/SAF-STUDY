#include <iostream>
#include <queue>
#include <string>
#include <vector>
using namespace std;

struct Node {
	int y, x;
	int lev;
};

char map[100][100];
queue<Node> q;
int directY[4] = { -1,1,0,0 };
int directX[4] = { 0,0,-1,1 };

int main() {
	int a, b;
	cin >> a >> b;

	for (int h = 0; h < b; h++) {
		cin >> map[h];
	}
	
	int idx, idy;
	cin >> idx >> idy;

	q.push({ idy - 1, idx - 1, 3 });
	int lastLev = 0;

	while (!q.empty()) {
		Node now = q.front();
		q.pop();

		for (int i = 0; i < 4; i++) {
			int ny = now.y + directY[i];
			int nx = now.x + directX[i];

			//배열이 1 by 1 일때
			lastLev = now.lev;
			// 갔다온데는 0으로 바꿔줌
			map[now.y][now.x] = '0';

			if (ny < 0 || nx < 0 || ny >= b || nx >= a) continue;
			if (map[ny][nx] == '0') continue;
			

			q.push({ ny, nx, now.lev + 1 });
			lastLev = now.lev + 1;

		}
	}
	int cnt = 0;
	for (int i = 0; i < b; i++) {
		for (int j = 0; j < a; j++) {
			if (map[i][j] == '1') cnt++;
		}
	}

	int no = lastLev - cnt;
	cout << lastLev << endl << cnt;
	
	return 0;
}