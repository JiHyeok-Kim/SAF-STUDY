#include <iostream>
#include <queue>
using namespace std;
struct Node {
	int y, x;
	int lev;
};
queue<Node> q;
int Map[100][100];
int directX[8] = { 1,2,2,1,-1,-2,-2,-1 };
int directY[8] = { -2,-1,1,2,2,1,-1,-2 };
int used[100][100] = { 0 };

int height, width, X, Y, tX, tY;

int main() {
	cin >> height >> width;

	for (int i = 0; i < height; i++) {
		for (int j = 0; j < width; j++) {
			Map[i][j] = 0;
		}
	}
	cin >>X >> Y>> tX>> tY;
	used[Y][X] = 1;
	q.push({ Y,X,0 });

	while (!q.empty()) {
		Node now = q.front();
		q.pop();


		if (now.x == tX && now.y == tY) {
			cout << now.lev << " ";
			break;
		}


		for (int i = 0; i < 8; i++) {
			int nx = now.x + directX[i];
			int ny = now.y + directY[i];

			if (ny < 0 || nx < 0 || nx >= width || ny >= height)continue;
			if (used[ny][nx] == 1)continue;
			used[ny][nx] = 1;
			q.push({ ny,nx,now.lev + 1 });


		}

	}





	return 0;
}