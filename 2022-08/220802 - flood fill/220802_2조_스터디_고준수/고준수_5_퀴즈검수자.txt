#include <iostream>

#include <queue>



using namespace std;



struct Node {
	int y, x;
	int lev;
};

queue<Node> q;

int arr[100][100];

int main() {

	int height, width;
	int blue_y, blue_x;
	cin >> height >> width;

	int red_y, red_x;
	cin >> red_y >> red_x;

	cin >> blue_y >> blue_x;


	int directY[8] = { -3,-2,+2,+3,+3,+2,-2,-3 };
	int directX[8] = { -2,-3,-3,-2,+2,+3,+3,+2 };
	int num;
	cin >> num;
	int used[100][100] = { 0 };
	for (int i = 0; i < num; i++)
	{
		int y, x;
		cin >> y >> x;
		arr[y][x] = 9;
	}

	q.push({ red_y,red_x,0 });
	arr[red_y][red_x] = 1;
	used[red_y][red_x] = 1;

	while (!q.empty())
	{
		Node now = q.front();
		q.pop();

		for (int i = 0; i < 8; i++)
		{
			int ny = now.y + directY[i];
			int nx = now.x + directX[i];
			if (nx < 0 || ny < 0 || nx >=width || ny>=height)continue;
			if (arr[ny][nx] == 9) continue;
			if (used[ny][nx] == 1) continue;
			q.push({ ny,nx,now.lev + 1 });
			arr[ny][nx] = now.lev + 1;
			used[ny][nx] = 1;

		}
	}
	if (arr[blue_y][blue_x]==0)
	{
		cout << "-1";
	}
	else
	{
		cout << arr[blue_y][blue_x];
	}

	return 0;
}