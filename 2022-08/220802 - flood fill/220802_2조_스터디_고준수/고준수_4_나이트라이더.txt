#include <iostream>
#include <string>
#include <vector>
#include <queue>
using namespace std;


int directY[8] = { -2,-1, 1, 2,2,1,-1,-2 };
int directX[8] = { -1,-2,-2,-1,1,2,2,1 };

struct Node {
	int y, x;
	int lev;

};
queue<Node> q;


int main()
{
	int arr[100][100] = { 0 };
	int used[100][100] = { 0 };
	int y, x;
	int y1, y2, x1, x2;
	cin >> y >> x;


	for (int i = 1; i <= 100; i++)
	{
		for (int j = 1; j <= 100; j++)
		{
			arr[i][j] = 9;
		}
	}
	
	cin >> y1 >> x1 >> y2 >> x2;


	q.push({ y1,x1,0 });
	used[y1][x1] = 1;
	arr[y1][x1] = 0;
	while (!q.empty())
	{
		Node now = q.front();
		q.pop();

		for (int i = 0; i < 8; i++)
		{
			int ny = now.y + directY[i];
			int nx = now.x + directX[i];
			if (nx < 1 || ny < 1 || nx >= 100 || ny >= 100)continue;;
			if (arr[ny][nx] != 9) continue;
			if (used[ny][nx] == 1) continue;
			q.push({ ny,nx,now.lev+1 });
			used[ny][nx] = now.lev+1;
			arr[ny][nx] = now.lev + 1;
		}
	}
	cout << arr[y2][x2];
	return 0;
}