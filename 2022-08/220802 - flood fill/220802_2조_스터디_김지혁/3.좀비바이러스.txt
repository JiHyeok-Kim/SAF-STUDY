#include <iostream>
#include <string>
#include <vector>
#include <queue>
using namespace std;

struct Node {
	int y, x;
	int lev;
};

char map[100][100];
int directY[] = { -1,1,0,0 };
int directX[] = { 0,0,-1,1 };
queue<Node> q;
int cnt = 0;
int lastLev = 0;
int w, h;
int x, y;

int main()
{
	cin >> w >> h;
	for (int j = 0; j < h; j++) {
		cin >> map[j];
	}
	cin >> x >> y;

	q.push({ y-1, x-1, 3 });

	while (!q.empty())
	{
		Node now = q.front();
		q.pop();

		for (int i = 0; i < 4; i++) {
			int ny = now.y + directY[i];
			int nx = now.x + directX[i];
			map[now.y][now.x] = '0';
			lastLev = now.lev;
			if (ny < 0 || nx < 0 || ny >= h || nx >= w) continue;
			if (map[ny][nx] == '0') continue;


			q.push({ ny, nx, now.lev + 1 });
			
			lastLev = now.lev + 1;
		}
	}

	for (int y = 0; y < h; y++) {
		for (int x = 0; x < w; x++) {
			if (map[y][x] == '1') { cnt++; }
		}
	}

	cout << lastLev << "\n" << cnt;
}