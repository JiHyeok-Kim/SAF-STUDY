#include <iostream>
#include <string>
#include <vector>
#include <queue>
using namespace std;

struct Node {
	int y, x;
	int lev;
};

int table[100][100];
int directY[] = { -3,-3,-2,-2,2,2,3,3 };
int directX[] = { -2,2,-3,3,-3,3,-2,2 };
int cnt = 0;
int h, w, r, c, yb, xb, n;
int yx[50][2];
int used[100][100];
queue<Node> q;

int main()
{
	cin >> h >> w;
	cin >> r >> c;
	cin >> yb >> xb;
	cin >> n;

	table[r][c] = 1;
	table[yb][xb] = 2;
	for (int y = 0; y < n; y++) {
		for (int x = 0; x < 2; x++) {
			cin >> yx[y][x];
		}
		table[yx[y][0]][yx[y][1]] = 1;
	}

	q.push({ r, c, 0});

	while (!q.empty()){
		Node now = q.front();
		q.pop();
		if (table[now.y][now.x] == 2) { cout << now.lev; return 0; }

		for (int i = 0; i < 8; i++) {
			int ny = now.y + directY[i];
			int nx = now.x + directX[i];
			if (ny < 0 || nx < 0 || ny >= h || nx >= w) continue;
			if (table[ny][nx] == 1) continue;
			if (used[ny][nx] == 1) continue;
			
			q.push({ ny, nx, now.lev + 1});
			used[ny][nx] = 1;
		}
	}
	
	cout << -1;
	return 0;
}