총 10개의 test case 


[input]
182
 (({<(({{[[[[<<[[(<[[{([{{{[<[[[{<<(<[[{}[]{}{}[]]]><><>{})[]{}><>[]<>><>}][]]<>{}]>]()}()()(){}}}{}][])(){}<>()}]{}[]]>()[][][]){}]]{}[]<>><>{}[]{}<>>]]]][]{}{}[]()}}))>}<>{}()))[][]

298 
{({{[({([{(<[([(([<({[{{[[({{[({([<{(<[[(<((<[{[<[([((<{{[([{<<[{(<({[<{}()>[]<>][]})>[])<>()[]}]>><>(){}()[]}]{}()<>[]<>)<>{}<>{}{}]}()}<>>)[]){}])]>[][]{}]()}][]()>[]))[]>)]][]>)[]{}}[]<><>>]()[])}{}){}]}}<><>){}][]{}{}]<>[]}(){}<>}][]})[]()><>]))])]>{}{}())}{}])<>}{})]{}{}}[])())<>{}[]<><>}[]{}
230
 [({([<[<[<<(([{([<((({<{([{[<[<<<([<[<([[{([<[{({([<(<[[][]]<>{}<>[]>){}{}<>>]{}())})}[]]{}>[][][]]()[][]<><>()<>){}}]])[][][]>]>()](){}[])>>><><>{}]>]{}[]}<>][]())}[][]>}<>)()))>{}[]()])[][]}]<>()<>))>>()][]>][][]>]())}<><>{}<>)]


[output]
#1 1 ( < 유효함 )
#2 0 ( < 유효하지 않음 )


방법[1] [보류]
1 배열에 받고 입력 받기
	메인에서 input 받기
2 유효성 검사 함수 전달
	유효성 검사 함수 만들기
	한글자씩 보내서 
3 유효성 검사 후 유효하면 1 아니면 0을 return


방법[2] [보류]
1 unordered_map 사용해서 괄호 ( ) { } [ ] < > 다 초기화 시켜놓고
	( ) { } [ ... 괄호들이 key로 값은 0이로 초기화 시켜놓기
2 %1c로 한 글자씩 때어서 입력 받음
3 for문을 돌면서 


방법[3] 
1 배열 크게 만들고 
2 input 받을 때 괄호를 인덱스로 사용해서 숫자를 ++ 해줌
	(문자가 아스키 코드 값으로 숫자가 되니까)
	( 40	) 41
	[ 91	] 93
	{ 123	} 125	
	< 60	> 62
3 짝이 맞는 문자끼리 숫자가 맞으면 1 아니면 0을 리턴해줌







