#include <iostream>
#include<vector>
#include<string>
#include<algorithm>
#include<queue>
#include<deque>
#include<math.h>
#include<unordered_set>
using namespace std;
int N, K;
deque<char >dq;
char num[4][10];
unordered_set<int>us;
vector<int>v;
void init1() {
    while (!dq.empty()) {
        dq.pop_back();
    }
}
int main()
{
    //freopen_s(new FILE*, "input.txt", "r", stdin);
    int T;
    cin >> T;

    for (int cas = 1; cas <= T; cas++) {
        cin >> N >> K;

        int times = N / 4;
        init1();
        us.clear();
        v.clear();

        string s;
        cin >> s;

        for (int i = 0; i < s.size(); i++) {
            dq.push_back(s[i]);
        }

        for (int k = 0; k < times; k++) {

            for (int i = 0; i < 4; i++) {
                for (int j = 0; j < times; j++) {
                    num[i][j] = dq[times * i + j];
                }
            }

            for (int i = 0; i < 4; i++) {
                int dec = strtol(num[i], NULL, 16);
                us.insert(dec);
            }

            char temp = dq[0];
            dq.pop_front();
            dq.push_back(temp);

        }

        for (auto i : us) {
            v.push_back(i);
        }

        sort(v.begin(), v.end(), greater<int>());
        cout << "#" << cas << " ";
        cout << v[K - 1] <<"\n";


    }



}
